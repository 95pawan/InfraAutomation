pipeline {
    agent any
    parameters{
        choice(
            
        choices:'\nAzure\nAWS',
        description:'choose the cloud provider',
        name:'PUBLIC_CLOUD')
    }
     stages{
    stage ('checkout'){
        when {
                // checkout when Azure is  requested
                expression { params.PUBLIC_CLOUD == 'Azure' }
            }
    steps{
checkout scm
}}
stage ('checkout_AWS'){
        when {
                // checkout when Aws is  requested
                expression { params.PUBLIC_CLOUD == 'AWS' }
            }
    steps{
git credentialsId: 'd1d4fbac-ecd2-452f-82f4-e92ee4cd6e88', url: 'https://github.dxc.com/vrajamanick2/cloudformation.git'
}}
// Mark the code build 'plan'....
         
            // Output Terraform version
            
            
            stage ('Initialize Terraform'){
                when {
                // checkout when Azure is  requested
                expression { params.PUBLIC_CLOUD == 'Azure' }
                }
                steps{
            sh "terraform init"
            }}
       
            stage ('Terraform Apply'){
                when {
                // checkout when Azure is  requested
                expression { params.PUBLIC_CLOUD == 'Azure' }
                }
                steps{
            
            sh '''                 
            terraform apply -input=true -auto-approve
          
            '''
            
            }
            }
            
                                                stage ('run cloudformation script'){
        when {
                // checkout when Aws is  requested
                expression { params.PUBLIC_CLOUD == 'AWS' }
            }
    steps{
           sh '''
                                   aws cloudformation create-stack --stack-name startmyinstance2 --template-body file://${WORKSPACE}/cloud.json
                                   aws cloudformation wait stack-create-complete --stack-name startmyinstance2
                                   
                                   
                                   '''
}}

 stage("docker build")
  {
   when {
                // checkout when Azure is  requested
                expression { params.PUBLIC_CLOUD == 'Azure' }
      }
  steps{
  sh "docker build -t terra.azurecr.io/demowsqc ."
  }
  }
  
  stage("docker push ")
  {
   when {
                // checkout when Azure is  requested
                expression { params.PUBLIC_CLOUD == 'Azure' }
      }
  steps{
  sh "docker login terra.azurecr.io -u 'terra' -p '5d8W2ouuhw=SWZ=S4HpqwKIhhOZQVBcZ'"
  sh "docker push terra.azurecr.io/demowsqc"
  }
  }
  stage("docker deploy ")
  {
   when {
                // checkout when Azure is  requested
                expression { params.PUBLIC_CLOUD == 'Azure' }
      }
      withDockerServer([uri: 'terraformvm.westus2.cloudapp.azure.com'])
     
			{
			sh "docker login terra.azurecr.io -u 'terra' -p '5d8W2ouuhw=SWZ=S4HpqwKIhhOZQVBcZ'"
			}
      steps{
      sh "docker pull terra.azurecr.io/demowsqc"
      sh "docker run -d -p 8080:8080 terra.azurecr.io/demowsqc"
  
  }
  }
  }
  }
  
